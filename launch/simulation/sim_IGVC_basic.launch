<launch>
    <!-- GAZEBO -->
    <include file="$(find capra_gazebo)/launch/Gazebo.launch">
        <arg name="world" default="$(find capra_gazebo)/worlds/igvc_basic_course.world" />
        <arg name="gui" default="false" />
        <arg name="initial_position" default="-x 0 -y -22.5 -rpy 0" />
    </include>

    <!-- MOVING -->
    <include file="$(find capra_2dnav)/launch/move_base.launch">
      <arg name="context" value="gazebo" />
    </include>

    <node pkg="capra_ai" name="state_ai" type="state_ai.py" output="screen" />

    <!-- MAPPING -->
    <node pkg="scan_to_cloud_converter" name="scan_to_cloud_converter_node" type="scan_to_cloud_converter_node" >
        <remap from="cloud" to="cloud_in" />
    </node>

    <include file="$(find capra_2dnav)/launch/octomap.launch" >
        <arg name="map_file" value="$(env IBEX_HOME)/maps/empty_map.bt" />
        <arg name="max_range" value="8" />
    </include>

    <node pkg="capra_2dnav" name="obstacle_generator" type="obstacle_generator.py" output="screen" />

    <node pkg="tf" type="static_transform_publisher" name="map_broadcaster" args="0 0 0 0 0 0 odom map 50" />

    <!-- VISION -->
    <include file="$(find seagoatvision_ros)/launch/Seagoat.launch" >
        <arg name="filterchain" value="$(find seagoatvision_ros)/filterchain/test2.filterchain" />
        <arg name="gui" value="False" />
        <arg name="calibration_file" value="$(find seagoatvision_ros)/filterchain/calibrate-sim.filterchain" />
    </include>

    <!--RVIZ  -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(env IBEX_HOME)/rviz_cfg/mapping.rviz"/>

    <!-- GOAL LOADER -->
    <include file="$(find capra_ai)/launch/GoalManager.launch" >
        <arg name="file" value="$(env IBEX_HOME)/waypoints/IGVCBasicCourse.json" />
    </include>


</launch>
