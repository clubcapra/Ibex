#!/usr/bin/env python
PACKAGE = "capra_flag_filter"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

save = gen.add_group("Save options")
save.add("save", bool_t, 0, "Save config", False)
save.add("filename", str_t, 0, "File Name", "yaml/flags.yaml")

rectangle = gen.add_group("Rectangle")
rectangle.add("rectangle_left_x", int_t, 0, "Rectangle: Left X", 250, -2000, 2000)
rectangle.add("rectangle_left_y", int_t, 0, "Rectangle: Left Y", 300, -2000, 2000)
rectangle.add("rectangle_right_x", int_t, 0, "Rectangle: Right X", 400, -2000, 2000)
rectangle.add("rectangle_right_y", int_t, 0, "Rectangle: Right Y", 400, -2000, 2000)

perspective = gen.add_group("Perspective")
perspective.add("perspective_bottom_left_x", double_t, 0, "Perspective: Bottom left X", 176.0, -2000, 2000)
perspective.add("perspective_bottom_left_y", double_t, 0, "Perspective: Bottom left Y", 253.0, -2000, 2000)
perspective.add("perspective_bottom_right_x", double_t, 0, "Perspective: Bottom right X", 393.0, -2000, 2000)
perspective.add("perspective_bottom_right_y", double_t, 0, "Perspective: Bottom right Y", 253.0, -2000, 2000)
perspective.add("perspective_top_left_x", double_t, 0, "Perspective: Top left X", -127.0, -2000, 2000)
perspective.add("perspective_top_left_y", double_t, 0, "Perspective: Top left Y", 61.0, -2000, 2000)
perspective.add("perspective_top_right_x", double_t, 0, "Perspective: Top right X", 699.0, -2000, 2000)
perspective.add("perspective_top_right_y", double_t, 0, "Perspective: Top right Y", 63.0, -2000, 2000)
perspective.add("perspective_translation_x", double_t, 0, "Perspective: Translation X", -47.0, -2000, 2000)
perspective.add("perspective_translation_y", double_t, 0, "Perspective: Translation Y", 35.0, -2000, 2000)
perspective.add("perspective_zoom", double_t, 0, "Perspective: Zoom", 166.0, -500, 500)

blue_threshold = gen.add_group("Blue threshold")
blue_threshold.add("blue_min_hue", int_t, 0, "Blue Min Hue", 115, 0, 255)
blue_threshold.add("blue_max_hue", int_t, 0, "Blue Max Hue", 124, 0, 255)
blue_threshold.add("blue_min_saturation", int_t, 0, "Blue Min Saturation", 191, 0, 255)
blue_threshold.add("blue_max_saturation", int_t, 0, "Blue Max Saturation", 255, 0, 255)
blue_threshold.add("blue_min_value", int_t, 0, "Blue Min Value", 141, 0, 255)
blue_threshold.add("blue_max_value", int_t, 0, "Blue Max Value", 255, 0, 255)

red_threshold = gen.add_group("Red threshold")
red_threshold.add("red_min_hue", int_t, 0, "Red Min Hue", 142, 0, 255)
red_threshold.add("red_max_hue", int_t, 0, "Red Max Hue", 255, 0, 255)
red_threshold.add("red_min_saturation", int_t, 0, "Red Min Saturation", 83, 0, 255)
red_threshold.add("red_max_saturation", int_t, 0, "Red Max Saturation", 255, 0, 255)
red_threshold.add("red_min_value", int_t, 0, "Red Min Value", 0, 0, 255)
red_threshold.add("red_max_value", int_t, 0, "Red Max Value", 255, 0, 255)

lines = gen.add_group("Lines")
lines.add("line_length", int_t, 0, "Lines: Length", 300, 0, 2000)
lines.add("line_stripe_width", int_t, 0, "Lines: Stripe Width", 300, 0, 2000)

display = gen.add_group("Display")
display.add("display_raw_image", bool_t, 0, "Display Raw Image", False)
display.add("display_rectangle_image", bool_t, 0, "Display Rectangle Image", False)
display.add("display_thresholded_image", bool_t, 0, "Display Thresholded Image", False)
display.add("display_points_image", bool_t, 0, "Display Points Image", False)
display.add("display_undistorted_image", bool_t, 0, "Display Undistorted Image", False)
display.add("display_perspective_image", bool_t, 0, "Display Perspective Image", False)
display.add("display_lines_image", bool_t, 0, "Display Lines Image", False)

exit(gen.generate(PACKAGE, "capra_flag_filter", "FlagFilter"))